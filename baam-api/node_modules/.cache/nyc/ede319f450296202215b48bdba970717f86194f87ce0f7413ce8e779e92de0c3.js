var cov_12keafu0ft=function(){var path="/Users/oscar/bootcamp/collab/skylab-bootcamp-201909/staff/oscar-rodriguez/baam/baam-api/logic/retrieve-pending-games/index.spec.js";var hash="2c99b632240926c465c5a6bd10a14a1064b83c71";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/oscar/bootcamp/collab/skylab-bootcamp-201909/staff/oscar-rodriguez/baam/baam-api/logic/retrieve-pending-games/index.spec.js",statementMap:{"0":{start:{line:1,column:0},end:{line:1,column:26}},"1":{start:{line:2,column:33},end:{line:2,column:40}},"2":{start:{line:3,column:13},end:{line:3,column:28}},"3":{start:{line:4,column:19},end:{line:4,column:23}},"4":{start:{line:5,column:19},end:{line:5,column:41}},"5":{start:{line:6,column:0},end:{line:6,column:20}},"6":{start:{line:7,column:26},end:{line:7,column:30}},"7":{start:{line:8,column:29},end:{line:8,column:41}},"8":{start:{line:9,column:52},end:{line:9,column:72}},"9":{start:{line:10,column:63},end:{line:10,column:83}},"10":{start:{line:12,column:0},end:{line:104,column:2}},"11":{start:{line:14,column:4},end:{line:14,column:47}},"12":{start:{line:14,column:17},end:{line:14,column:46}},"13":{start:{line:18,column:4},end:{line:87,column:6}},"14":{start:{line:19,column:8},end:{line:19,column:46}},"15":{start:{line:21,column:19},end:{line:21,column:37}},"16":{start:{line:22,column:22},end:{line:22,column:43}},"17":{start:{line:23,column:20},end:{line:23,column:48}},"18":{start:{line:24,column:8},end:{line:24,column:42}},"19":{start:{line:25,column:8},end:{line:25,column:42}},"20":{start:{line:26,column:23},end:{line:26,column:45}},"21":{start:{line:28,column:21},end:{line:28,column:95}},"22":{start:{line:29,column:22},end:{line:29,column:96}},"23":{start:{line:31,column:27},end:{line:41,column:10}},"24":{start:{line:43,column:27},end:{line:53,column:10}},"25":{start:{line:55,column:24},end:{line:60,column:9}},"26":{start:{line:62,column:25},end:{line:67,column:9}},"27":{start:{line:69,column:25},end:{line:74,column:9}},"28":{start:{line:76,column:25},end:{line:81,column:9}},"29":{start:{line:83,column:22},end:{line:83,column:77}},"30":{start:{line:84,column:8},end:{line:84,column:29}},"31":{start:{line:85,column:8},end:{line:85,column:29}},"32":{start:{line:89,column:4},end:{line:101,column:6}},"33":{start:{line:90,column:22},end:{line:90,column:50}},"34":{start:{line:92,column:8},end:{line:92,column:30}},"35":{start:{line:93,column:8},end:{line:93,column:48}},"36":{start:{line:94,column:8},end:{line:94,column:40}},"37":{start:{line:96,column:8},end:{line:96,column:45}},"38":{start:{line:97,column:8},end:{line:97,column:53}},"39":{start:{line:99,column:8},end:{line:99,column:45}},"40":{start:{line:100,column:8},end:{line:100,column:53}},"41":{start:{line:103,column:4},end:{line:103,column:94}},"42":{start:{line:103,column:16},end:{line:103,column:93}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:34},end:{line:12,column:35}},loc:{start:{line:12,column:40},end:{line:104,column:1}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:11},end:{line:14,column:12}},loc:{start:{line:14,column:17},end:{line:14,column:46}},line:14},"2":{name:"(anonymous_2)",decl:{start:{line:18,column:15},end:{line:18,column:16}},loc:{start:{line:18,column:27},end:{line:87,column:5}},line:18},"3":{name:"(anonymous_3)",decl:{start:{line:89,column:52},end:{line:89,column:53}},loc:{start:{line:89,column:64},end:{line:101,column:5}},line:89},"4":{name:"(anonymous_4)",decl:{start:{line:103,column:10},end:{line:103,column:11}},loc:{start:{line:103,column:16},end:{line:103,column:93}},line:103}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"2c99b632240926c465c5a6bd10a14a1064b83c71"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_12keafu0ft.s[0]++;require('dotenv').config();const{env:{TEST_DB_URL}}=(cov_12keafu0ft.s[1]++,process);const chai=(cov_12keafu0ft.s[2]++,require('chai'));const{expect}=(cov_12keafu0ft.s[3]++,chai);const chaiSubset=(cov_12keafu0ft.s[4]++,require('chai-subset'));cov_12keafu0ft.s[5]++;chai.use(chaiSubset);const{random,floor}=(cov_12keafu0ft.s[6]++,Math);const retrievePendingGames=(cov_12keafu0ft.s[7]++,require('.'));const{errors:{NotFoundError,ContentError}}=(cov_12keafu0ft.s[8]++,require('baam-util'));const{ObjectId,database,models:{User,Game,Player}}=(cov_12keafu0ft.s[9]++,require('baam-data'));cov_12keafu0ft.s[10]++;describe('logic - retrieve game',()=>{cov_12keafu0ft.f[0]++;cov_12keafu0ft.s[11]++;before(()=>{cov_12keafu0ft.f[1]++;cov_12keafu0ft.s[12]++;return database.connect(TEST_DB_URL);});let nickname1,nickname2,game1Id,game2Id;cov_12keafu0ft.s[13]++;beforeEach(async()=>{cov_12keafu0ft.f[2]++;cov_12keafu0ft.s[14]++;await Promise.all([Game.deleteMany()]);let name=(cov_12keafu0ft.s[15]++,`name-${random()}`);let surname=(cov_12keafu0ft.s[16]++,`surname-${random()}`);let email=(cov_12keafu0ft.s[17]++,`email-${random()}@mail.com`);cov_12keafu0ft.s[18]++;nickname1=`nickname-${random()}`;cov_12keafu0ft.s[19]++;nickname2=`nickname-${random()}`;let password=(cov_12keafu0ft.s[20]++,`password-${random()}`);const user=(cov_12keafu0ft.s[21]++,await User.create({name,surname,email,nickname:nickname1,password}));const user2=(cov_12keafu0ft.s[22]++,await User.create({name,surname,email,nickname:nickname2,password}));const newPlayer1=(cov_12keafu0ft.s[23]++,new Player({user:user.id,lifePoints:5,hand:[ObjectId().toString(),ObjectId().toString()],tempZone:{card:ObjectId().toString(),duration:random()},discards:[ObjectId().toString(),ObjectId().toString()],modifier:false,attack:1,defense:0,lastAccess:new Date()}));const newPlayer2=(cov_12keafu0ft.s[24]++,new Player({user:user2.id,lifePoints:5,hand:[ObjectId().toString(),ObjectId().toString()],tempZone:null,discards:[ObjectId().toString(),ObjectId().toString()],modifier:false,attack:1,defense:0,lastAccess:new Date()}));const newGame=(cov_12keafu0ft.s[25]++,{players:[newPlayer1],shots:[],currentPlayer:floor(random()*2),status:'PENDING'});const newGame2=(cov_12keafu0ft.s[26]++,{players:[newPlayer2],shots:[],currentPlayer:floor(random()*2),status:'PENDING'});const newGame3=(cov_12keafu0ft.s[27]++,{players:[newPlayer1,newPlayer2],shots:[],currentPlayer:floor(random()*2),status:'END'});const newGame4=(cov_12keafu0ft.s[28]++,{players:[newPlayer1,newPlayer2],shots:[],currentPlayer:floor(random()*2),status:'READY'});const games=(cov_12keafu0ft.s[29]++,await Game.create([newGame,newGame2,newGame3,newGame4]));cov_12keafu0ft.s[30]++;game1Id=games[0].id;cov_12keafu0ft.s[31]++;game2Id=games[1].id;});cov_12keafu0ft.s[32]++;it('should return the games on PENDING status',async()=>{cov_12keafu0ft.f[3]++;const games=(cov_12keafu0ft.s[33]++,await retrievePendingGames());cov_12keafu0ft.s[34]++;expect(games).to.exist;cov_12keafu0ft.s[35]++;expect(games).to.be.an.instanceOf(Array);cov_12keafu0ft.s[36]++;expect(games.length).to.equal(2);cov_12keafu0ft.s[37]++;expect(games[0].id).to.equal(game1Id);cov_12keafu0ft.s[38]++;expect(games[0].nickname).to.equal(nickname1);cov_12keafu0ft.s[39]++;expect(games[1].id).to.equal(game2Id);cov_12keafu0ft.s[40]++;expect(games[1].nickname).to.equal(nickname2);});cov_12keafu0ft.s[41]++;after(()=>{cov_12keafu0ft.f[4]++;cov_12keafu0ft.s[42]++;return Promise.all([User.deleteMany(),Game.deleteMany()]).then(database.disconnect);});});